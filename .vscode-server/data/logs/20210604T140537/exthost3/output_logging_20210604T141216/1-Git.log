Looking for git in: git
Using git 2.25.1 from git
Opening repository for path='/home/nikolay/personalProjects' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/nikolay/personalProjects' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
> git rev-parse --git-dir
Open repository: /home/nikolay/personalProjects/test
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git check-ignore -v -z --stdin
> git show --textconv :src/App.js
> git ls-files --stage -- /home/nikolay/personalProjects/test/src/App.js
> git cat-file -s 37845757234ccb68531c10cf7a2ffc589c47e342
> git show --textconv :package-lock.json
> git ls-files --stage -- /home/nikolay/personalProjects/test/package-lock.json
> git cat-file -s 349f46be734d43287093d1139990d6becf248381
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git show --textconv :src/App.js
> git ls-files --stage -- /home/nikolay/personalProjects/test/src/App.js
> git cat-file -s 37845757234ccb68531c10cf7a2ffc589c47e342
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
Opening repository for path='/home/nikolay/personalProjects' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
> git show --textconv :src/App.js
> git ls-files --stage -- /home/nikolay/personalProjects/test/src/App.js
> git cat-file -s 37845757234ccb68531c10cf7a2ffc589c47e342
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n27 -- /home/nikolay/personalProjects/test/src/App.js
> git rev-list --count cd7bb66318a6dd7591733c939869c282870b2e4e.. -- /home/nikolay/personalProjects/test/src/App.js
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -- /home/nikolay/personalProjects/test/src/App.js
> git rev-parse --git-dir
Open repository: /home/nikolay
> git status -z -u
> git show --textconv :personalProjects/index.html
> git ls-files --stage -- /home/nikolay/personalProjects/index.html
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n21 -- /home/nikolay/personalProjects/index.html
> git check-ignore -v -z --stdin
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/main refs/remotes/main
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n21 -- /home/nikolay/personalProjects/index.html
> git check-ignore -v -z --stdin
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n21 -- /home/nikolay/personalProjects/index.html
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n21 -- /home/nikolay/personalProjects/index.html
